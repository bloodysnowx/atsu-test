//------------------------------------------------------------------------------
// <auto-generated>
//    このコードはテンプレートから生成されました。
//
//    このファイルを手動で変更すると、アプリケーションで予期しない動作が発生する可能性があります。
//    このファイルに対する手動の変更は、コードが再生成されると上書きされます。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM リレーションシップのメタデータ

[assembly: EdmRelationshipAttribute("PTRDB", "PlayerStakesData", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PTRtoNote2.Model.Player), "StakesData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PTRtoNote2.Model.StakesData))]
[assembly: EdmRelationshipAttribute("PTRDB", "CurrencyStake", "Currency", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PTRtoNote2.Model.Currency), "Stake", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PTRtoNote2.Model.Stake))]
[assembly: EdmRelationshipAttribute("PTRDB", "GameStake", "Game", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PTRtoNote2.Model.Game), "Stake", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PTRtoNote2.Model.Stake))]
[assembly: EdmRelationshipAttribute("PTRDB", "BetTypeStake", "BetType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PTRtoNote2.Model.BetType), "Stake", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PTRtoNote2.Model.Stake))]
[assembly: EdmRelationshipAttribute("PTRDB", "StakeStakesData", "Stake", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PTRtoNote2.Model.Stake), "StakesData", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PTRtoNote2.Model.StakesData))]

#endregion

namespace PTRtoNote2.Model
{
    #region コンテキスト
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    public partial class PTRDBContainer : ObjectContext
    {
        #region コンストラクター
    
        /// <summary>
        /// アプリケーション構成ファイルの 'PTRDBContainer' セクションにある接続文字列を使用して新しい PTRDBContainer オブジェクトを初期化します。
        /// </summary>
        public PTRDBContainer() : base("name=PTRDBContainer", "PTRDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい PTRDBContainer オブジェクトを初期化します。
        /// </summary>
        public PTRDBContainer(string connectionString) : base(connectionString, "PTRDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 新しい PTRDBContainer オブジェクトを初期化します。
        /// </summary>
        public PTRDBContainer(EntityConnection connection) : base(connection, "PTRDBContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 部分メソッド
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Player> Players
        {
            get
            {
                if ((_Players == null))
                {
                    _Players = base.CreateObjectSet<Player>("Players");
                }
                return _Players;
            }
        }
        private ObjectSet<Player> _Players;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<StakesData> StakesDatas
        {
            get
            {
                if ((_StakesDatas == null))
                {
                    _StakesDatas = base.CreateObjectSet<StakesData>("StakesDatas");
                }
                return _StakesDatas;
            }
        }
        private ObjectSet<StakesData> _StakesDatas;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Stake> Stakes
        {
            get
            {
                if ((_Stakes == null))
                {
                    _Stakes = base.CreateObjectSet<Stake>("Stakes");
                }
                return _Stakes;
            }
        }
        private ObjectSet<Stake> _Stakes;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Currency> Currencies
        {
            get
            {
                if ((_Currencies == null))
                {
                    _Currencies = base.CreateObjectSet<Currency>("Currencies");
                }
                return _Currencies;
            }
        }
        private ObjectSet<Currency> _Currencies;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<Game> Games
        {
            get
            {
                if ((_Games == null))
                {
                    _Games = base.CreateObjectSet<Game>("Games");
                }
                return _Games;
            }
        }
        private ObjectSet<Game> _Games;
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        public ObjectSet<BetType> BetTypes
        {
            get
            {
                if ((_BetTypes == null))
                {
                    _BetTypes = base.CreateObjectSet<BetType>("BetTypes");
                }
                return _BetTypes;
            }
        }
        private ObjectSet<BetType> _BetTypes;

        #endregion
        #region AddTo メソッド
    
        /// <summary>
        /// Players EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToPlayers(Player player)
        {
            base.AddObject("Players", player);
        }
    
        /// <summary>
        /// StakesDatas EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToStakesDatas(StakesData stakesData)
        {
            base.AddObject("StakesDatas", stakesData);
        }
    
        /// <summary>
        /// Stakes EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToStakes(Stake stake)
        {
            base.AddObject("Stakes", stake);
        }
    
        /// <summary>
        /// Currencies EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToCurrencies(Currency currency)
        {
            base.AddObject("Currencies", currency);
        }
    
        /// <summary>
        /// Games EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToGames(Game game)
        {
            base.AddObject("Games", game);
        }
    
        /// <summary>
        /// BetTypes EntitySet に新しいオブジェクトを追加するための非推奨のメソッドです。代わりに、関連付けられている ObjectSet&lt;T&gt; プロパティの .Add メソッドを使用してください。
        /// </summary>
        public void AddToBetTypes(BetType betType)
        {
            base.AddObject("BetTypes", betType);
        }

        #endregion
    }
    

    #endregion
    
    #region エンティティ
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PTRDB", Name="BetType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BetType : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい BetType オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="name">Name プロパティの初期値。</param>
        public static BetType CreateBetType(global::System.Int32 id, global::System.String name)
        {
            BetType betType = new BetType();
            betType.ID = id;
            betType.Name = name;
            return betType;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "BetTypeStake", "Stake")]
        public EntityCollection<Stake> Stakes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stake>("PTRDB.BetTypeStake", "Stake");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stake>("PTRDB.BetTypeStake", "Stake", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PTRDB", Name="Currency")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Currency : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Currency オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="name">Name プロパティの初期値。</param>
        public static Currency CreateCurrency(global::System.Int32 id, global::System.String name)
        {
            Currency currency = new Currency();
            currency.ID = id;
            currency.Name = name;
            return currency;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "CurrencyStake", "Stake")]
        public EntityCollection<Stake> Stakes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stake>("PTRDB.CurrencyStake", "Stake");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stake>("PTRDB.CurrencyStake", "Stake", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PTRDB", Name="Game")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Game : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Game オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="name">Name プロパティの初期値。</param>
        public static Game CreateGame(global::System.Int32 id, global::System.String name)
        {
            Game game = new Game();
            game.ID = id;
            game.Name = name;
            return game;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "GameStake", "Stake")]
        public EntityCollection<Stake> Stakes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Stake>("PTRDB.GameStake", "Stake");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Stake>("PTRDB.GameStake", "Stake", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PTRDB", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Player オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="playerName">PlayerName プロパティの初期値。</param>
        /// <param name="bB_100">BB_100 プロパティの初期値。</param>
        /// <param name="earnings">Earnings プロパティの初期値。</param>
        /// <param name="rating">Rating プロパティの初期値。</param>
        /// <param name="hands">Hands プロパティの初期値。</param>
        /// <param name="dateOfData">DateOfData プロパティの初期値。</param>
        /// <param name="dateOfLastPlay">DateOfLastPlay プロパティの初期値。</param>
        /// <param name="hU_BB_100">HU_BB_100 プロパティの初期値。</param>
        /// <param name="hU_Hands">HU_Hands プロパティの初期値。</param>
        /// <param name="hU_Earnings">HU_Earnings プロパティの初期値。</param>
        /// <param name="o_Hands">O_Hands プロパティの初期値。</param>
        /// <param name="o_BB_100">O_BB_100 プロパティの初期値。</param>
        /// <param name="o_Earnings">O_Earnings プロパティの初期値。</param>
        /// <param name="fL_Hands">FL_Hands プロパティの初期値。</param>
        /// <param name="fL_BB_100">FL_BB_100 プロパティの初期値。</param>
        /// <param name="fL_Earnings">FL_Earnings プロパティの初期値。</param>
        /// <param name="nL_Hands">NL_Hands プロパティの初期値。</param>
        /// <param name="nL_BB_100">NL_BB_100 プロパティの初期値。</param>
        /// <param name="nL_Earnings">NL_Earnings プロパティの初期値。</param>
        /// <param name="eX_BB_100">EX_BB_100 プロパティの初期値。</param>
        /// <param name="eX_Hands">EX_Hands プロパティの初期値。</param>
        /// <param name="eX_Earnings">EX_Earnings プロパティの初期値。</param>
        public static Player CreatePlayer(global::System.Int32 id, global::System.String playerName, global::System.Decimal bB_100, global::System.Int32 earnings, global::System.Int32 rating, global::System.Int32 hands, global::System.DateTime dateOfData, global::System.DateTime dateOfLastPlay, global::System.Decimal hU_BB_100, global::System.Int32 hU_Hands, global::System.Int32 hU_Earnings, global::System.Int32 o_Hands, global::System.Decimal o_BB_100, global::System.Int32 o_Earnings, global::System.Int32 fL_Hands, global::System.Decimal fL_BB_100, global::System.Int32 fL_Earnings, global::System.Int32 nL_Hands, global::System.Decimal nL_BB_100, global::System.Int32 nL_Earnings, global::System.Decimal eX_BB_100, global::System.Int32 eX_Hands, global::System.Int32 eX_Earnings)
        {
            Player player = new Player();
            player.ID = id;
            player.PlayerName = playerName;
            player.BB_100 = bB_100;
            player.Earnings = earnings;
            player.Rating = rating;
            player.Hands = hands;
            player.DateOfData = dateOfData;
            player.DateOfLastPlay = dateOfLastPlay;
            player.HU_BB_100 = hU_BB_100;
            player.HU_Hands = hU_Hands;
            player.HU_Earnings = hU_Earnings;
            player.O_Hands = o_Hands;
            player.O_BB_100 = o_BB_100;
            player.O_Earnings = o_Earnings;
            player.FL_Hands = fL_Hands;
            player.FL_BB_100 = fL_BB_100;
            player.FL_Earnings = fL_Earnings;
            player.NL_Hands = nL_Hands;
            player.NL_BB_100 = nL_BB_100;
            player.NL_Earnings = nL_Earnings;
            player.EX_BB_100 = eX_BB_100;
            player.EX_Hands = eX_Hands;
            player.EX_Earnings = eX_Earnings;
            return player;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PlayerName
        {
            get
            {
                return _PlayerName;
            }
            set
            {
                OnPlayerNameChanging(value);
                ReportPropertyChanging("PlayerName");
                _PlayerName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PlayerName");
                OnPlayerNameChanged();
            }
        }
        private global::System.String _PlayerName;
        partial void OnPlayerNameChanging(global::System.String value);
        partial void OnPlayerNameChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BB_100
        {
            get
            {
                return _BB_100;
            }
            set
            {
                OnBB_100Changing(value);
                ReportPropertyChanging("BB_100");
                _BB_100 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BB_100");
                OnBB_100Changed();
            }
        }
        private global::System.Decimal _BB_100;
        partial void OnBB_100Changing(global::System.Decimal value);
        partial void OnBB_100Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Earnings
        {
            get
            {
                return _Earnings;
            }
            set
            {
                OnEarningsChanging(value);
                ReportPropertyChanging("Earnings");
                _Earnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Earnings");
                OnEarningsChanged();
            }
        }
        private global::System.Int32 _Earnings;
        partial void OnEarningsChanging(global::System.Int32 value);
        partial void OnEarningsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rating
        {
            get
            {
                return _Rating;
            }
            set
            {
                OnRatingChanging(value);
                ReportPropertyChanging("Rating");
                _Rating = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rating");
                OnRatingChanged();
            }
        }
        private global::System.Int32 _Rating;
        partial void OnRatingChanging(global::System.Int32 value);
        partial void OnRatingChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hands
        {
            get
            {
                return _Hands;
            }
            set
            {
                OnHandsChanging(value);
                ReportPropertyChanging("Hands");
                _Hands = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hands");
                OnHandsChanged();
            }
        }
        private global::System.Int32 _Hands;
        partial void OnHandsChanging(global::System.Int32 value);
        partial void OnHandsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfData
        {
            get
            {
                return _DateOfData;
            }
            set
            {
                OnDateOfDataChanging(value);
                ReportPropertyChanging("DateOfData");
                _DateOfData = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfData");
                OnDateOfDataChanged();
            }
        }
        private global::System.DateTime _DateOfData;
        partial void OnDateOfDataChanging(global::System.DateTime value);
        partial void OnDateOfDataChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfLastPlay
        {
            get
            {
                return _DateOfLastPlay;
            }
            set
            {
                OnDateOfLastPlayChanging(value);
                ReportPropertyChanging("DateOfLastPlay");
                _DateOfLastPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfLastPlay");
                OnDateOfLastPlayChanged();
            }
        }
        private global::System.DateTime _DateOfLastPlay;
        partial void OnDateOfLastPlayChanging(global::System.DateTime value);
        partial void OnDateOfLastPlayChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal HU_BB_100
        {
            get
            {
                return _HU_BB_100;
            }
            set
            {
                OnHU_BB_100Changing(value);
                ReportPropertyChanging("HU_BB_100");
                _HU_BB_100 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HU_BB_100");
                OnHU_BB_100Changed();
            }
        }
        private global::System.Decimal _HU_BB_100;
        partial void OnHU_BB_100Changing(global::System.Decimal value);
        partial void OnHU_BB_100Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HU_Hands
        {
            get
            {
                return _HU_Hands;
            }
            set
            {
                OnHU_HandsChanging(value);
                ReportPropertyChanging("HU_Hands");
                _HU_Hands = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HU_Hands");
                OnHU_HandsChanged();
            }
        }
        private global::System.Int32 _HU_Hands;
        partial void OnHU_HandsChanging(global::System.Int32 value);
        partial void OnHU_HandsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 HU_Earnings
        {
            get
            {
                return _HU_Earnings;
            }
            set
            {
                OnHU_EarningsChanging(value);
                ReportPropertyChanging("HU_Earnings");
                _HU_Earnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HU_Earnings");
                OnHU_EarningsChanged();
            }
        }
        private global::System.Int32 _HU_Earnings;
        partial void OnHU_EarningsChanging(global::System.Int32 value);
        partial void OnHU_EarningsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 O_Hands
        {
            get
            {
                return _O_Hands;
            }
            set
            {
                OnO_HandsChanging(value);
                ReportPropertyChanging("O_Hands");
                _O_Hands = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("O_Hands");
                OnO_HandsChanged();
            }
        }
        private global::System.Int32 _O_Hands;
        partial void OnO_HandsChanging(global::System.Int32 value);
        partial void OnO_HandsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal O_BB_100
        {
            get
            {
                return _O_BB_100;
            }
            set
            {
                OnO_BB_100Changing(value);
                ReportPropertyChanging("O_BB_100");
                _O_BB_100 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("O_BB_100");
                OnO_BB_100Changed();
            }
        }
        private global::System.Decimal _O_BB_100;
        partial void OnO_BB_100Changing(global::System.Decimal value);
        partial void OnO_BB_100Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 O_Earnings
        {
            get
            {
                return _O_Earnings;
            }
            set
            {
                OnO_EarningsChanging(value);
                ReportPropertyChanging("O_Earnings");
                _O_Earnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("O_Earnings");
                OnO_EarningsChanged();
            }
        }
        private global::System.Int32 _O_Earnings;
        partial void OnO_EarningsChanging(global::System.Int32 value);
        partial void OnO_EarningsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FL_Hands
        {
            get
            {
                return _FL_Hands;
            }
            set
            {
                OnFL_HandsChanging(value);
                ReportPropertyChanging("FL_Hands");
                _FL_Hands = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FL_Hands");
                OnFL_HandsChanged();
            }
        }
        private global::System.Int32 _FL_Hands;
        partial void OnFL_HandsChanging(global::System.Int32 value);
        partial void OnFL_HandsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal FL_BB_100
        {
            get
            {
                return _FL_BB_100;
            }
            set
            {
                OnFL_BB_100Changing(value);
                ReportPropertyChanging("FL_BB_100");
                _FL_BB_100 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FL_BB_100");
                OnFL_BB_100Changed();
            }
        }
        private global::System.Decimal _FL_BB_100;
        partial void OnFL_BB_100Changing(global::System.Decimal value);
        partial void OnFL_BB_100Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 FL_Earnings
        {
            get
            {
                return _FL_Earnings;
            }
            set
            {
                OnFL_EarningsChanging(value);
                ReportPropertyChanging("FL_Earnings");
                _FL_Earnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("FL_Earnings");
                OnFL_EarningsChanged();
            }
        }
        private global::System.Int32 _FL_Earnings;
        partial void OnFL_EarningsChanging(global::System.Int32 value);
        partial void OnFL_EarningsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NL_Hands
        {
            get
            {
                return _NL_Hands;
            }
            set
            {
                OnNL_HandsChanging(value);
                ReportPropertyChanging("NL_Hands");
                _NL_Hands = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NL_Hands");
                OnNL_HandsChanged();
            }
        }
        private global::System.Int32 _NL_Hands;
        partial void OnNL_HandsChanging(global::System.Int32 value);
        partial void OnNL_HandsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal NL_BB_100
        {
            get
            {
                return _NL_BB_100;
            }
            set
            {
                OnNL_BB_100Changing(value);
                ReportPropertyChanging("NL_BB_100");
                _NL_BB_100 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NL_BB_100");
                OnNL_BB_100Changed();
            }
        }
        private global::System.Decimal _NL_BB_100;
        partial void OnNL_BB_100Changing(global::System.Decimal value);
        partial void OnNL_BB_100Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 NL_Earnings
        {
            get
            {
                return _NL_Earnings;
            }
            set
            {
                OnNL_EarningsChanging(value);
                ReportPropertyChanging("NL_Earnings");
                _NL_Earnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("NL_Earnings");
                OnNL_EarningsChanged();
            }
        }
        private global::System.Int32 _NL_Earnings;
        partial void OnNL_EarningsChanging(global::System.Int32 value);
        partial void OnNL_EarningsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal EX_BB_100
        {
            get
            {
                return _EX_BB_100;
            }
            set
            {
                OnEX_BB_100Changing(value);
                ReportPropertyChanging("EX_BB_100");
                _EX_BB_100 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EX_BB_100");
                OnEX_BB_100Changed();
            }
        }
        private global::System.Decimal _EX_BB_100;
        partial void OnEX_BB_100Changing(global::System.Decimal value);
        partial void OnEX_BB_100Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EX_Hands
        {
            get
            {
                return _EX_Hands;
            }
            set
            {
                OnEX_HandsChanging(value);
                ReportPropertyChanging("EX_Hands");
                _EX_Hands = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EX_Hands");
                OnEX_HandsChanged();
            }
        }
        private global::System.Int32 _EX_Hands;
        partial void OnEX_HandsChanging(global::System.Int32 value);
        partial void OnEX_HandsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EX_Earnings
        {
            get
            {
                return _EX_Earnings;
            }
            set
            {
                OnEX_EarningsChanging(value);
                ReportPropertyChanging("EX_Earnings");
                _EX_Earnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EX_Earnings");
                OnEX_EarningsChanged();
            }
        }
        private global::System.Int32 _EX_Earnings;
        partial void OnEX_EarningsChanging(global::System.Int32 value);
        partial void OnEX_EarningsChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "PlayerStakesData", "StakesData")]
        public EntityCollection<StakesData> StakesDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StakesData>("PTRDB.PlayerStakesData", "StakesData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StakesData>("PTRDB.PlayerStakesData", "StakesData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PTRDB", Name="Stake")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Stake : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい Stake オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="rate">Rate プロパティの初期値。</param>
        /// <param name="playerNum">PlayerNum プロパティの初期値。</param>
        /// <param name="stackSize">StackSize プロパティの初期値。</param>
        public static Stake CreateStake(global::System.Int32 id, global::System.Int32 rate, global::System.Int32 playerNum, global::System.Int32 stackSize)
        {
            Stake stake = new Stake();
            stake.ID = id;
            stake.Rate = rate;
            stake.PlayerNum = playerNum;
            stake.StackSize = stackSize;
            return stake;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Rate
        {
            get
            {
                return _Rate;
            }
            set
            {
                OnRateChanging(value);
                ReportPropertyChanging("Rate");
                _Rate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Rate");
                OnRateChanged();
            }
        }
        private global::System.Int32 _Rate;
        partial void OnRateChanging(global::System.Int32 value);
        partial void OnRateChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerNum
        {
            get
            {
                return _PlayerNum;
            }
            set
            {
                OnPlayerNumChanging(value);
                ReportPropertyChanging("PlayerNum");
                _PlayerNum = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PlayerNum");
                OnPlayerNumChanged();
            }
        }
        private global::System.Int32 _PlayerNum;
        partial void OnPlayerNumChanging(global::System.Int32 value);
        partial void OnPlayerNumChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 StackSize
        {
            get
            {
                return _StackSize;
            }
            set
            {
                OnStackSizeChanging(value);
                ReportPropertyChanging("StackSize");
                _StackSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StackSize");
                OnStackSizeChanged();
            }
        }
        private global::System.Int32 _StackSize;
        partial void OnStackSizeChanging(global::System.Int32 value);
        partial void OnStackSizeChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "CurrencyStake", "Currency")]
        public Currency Currency
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("PTRDB.CurrencyStake", "Currency").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("PTRDB.CurrencyStake", "Currency").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Currency> CurrencyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Currency>("PTRDB.CurrencyStake", "Currency");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Currency>("PTRDB.CurrencyStake", "Currency", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "GameStake", "Game")]
        public Game Game
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("PTRDB.GameStake", "Game").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("PTRDB.GameStake", "Game").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Game> GameReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Game>("PTRDB.GameStake", "Game");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Game>("PTRDB.GameStake", "Game", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "BetTypeStake", "BetType")]
        public BetType BetType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BetType>("PTRDB.BetTypeStake", "BetType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BetType>("PTRDB.BetTypeStake", "BetType").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BetType> BetTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BetType>("PTRDB.BetTypeStake", "BetType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BetType>("PTRDB.BetTypeStake", "BetType", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "StakeStakesData", "StakesData")]
        public EntityCollection<StakesData> StakesDatas
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<StakesData>("PTRDB.StakeStakesData", "StakesData");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<StakesData>("PTRDB.StakeStakesData", "StakesData", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// 使用できるメタデータ ドキュメントはありません。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PTRDB", Name="StakesData")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class StakesData : EntityObject
    {
        #region ファクトリ メソッド
    
        /// <summary>
        /// 新しい StakesData オブジェクトを作成します。
        /// </summary>
        /// <param name="id">ID プロパティの初期値。</param>
        /// <param name="hands">Hands プロパティの初期値。</param>
        /// <param name="bB_100">BB_100 プロパティの初期値。</param>
        /// <param name="earnings">Earnings プロパティの初期値。</param>
        /// <param name="totalBB">TotalBB プロパティの初期値。</param>
        /// <param name="dateOfLastPlay">DateOfLastPlay プロパティの初期値。</param>
        public static StakesData CreateStakesData(global::System.Int32 id, global::System.Int32 hands, global::System.Decimal bB_100, global::System.Int32 earnings, global::System.Int32 totalBB, global::System.DateTime dateOfLastPlay)
        {
            StakesData stakesData = new StakesData();
            stakesData.ID = id;
            stakesData.Hands = hands;
            stakesData.BB_100 = bB_100;
            stakesData.Earnings = earnings;
            stakesData.TotalBB = totalBB;
            stakesData.DateOfLastPlay = dateOfLastPlay;
            return stakesData;
        }

        #endregion
        #region プリミティブ プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Hands
        {
            get
            {
                return _Hands;
            }
            set
            {
                OnHandsChanging(value);
                ReportPropertyChanging("Hands");
                _Hands = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Hands");
                OnHandsChanged();
            }
        }
        private global::System.Int32 _Hands;
        partial void OnHandsChanging(global::System.Int32 value);
        partial void OnHandsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal BB_100
        {
            get
            {
                return _BB_100;
            }
            set
            {
                OnBB_100Changing(value);
                ReportPropertyChanging("BB_100");
                _BB_100 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BB_100");
                OnBB_100Changed();
            }
        }
        private global::System.Decimal _BB_100;
        partial void OnBB_100Changing(global::System.Decimal value);
        partial void OnBB_100Changed();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Earnings
        {
            get
            {
                return _Earnings;
            }
            set
            {
                OnEarningsChanging(value);
                ReportPropertyChanging("Earnings");
                _Earnings = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Earnings");
                OnEarningsChanged();
            }
        }
        private global::System.Int32 _Earnings;
        partial void OnEarningsChanging(global::System.Int32 value);
        partial void OnEarningsChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TotalBB
        {
            get
            {
                return _TotalBB;
            }
            set
            {
                OnTotalBBChanging(value);
                ReportPropertyChanging("TotalBB");
                _TotalBB = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TotalBB");
                OnTotalBBChanged();
            }
        }
        private global::System.Int32 _TotalBB;
        partial void OnTotalBBChanging(global::System.Int32 value);
        partial void OnTotalBBChanged();
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateOfLastPlay
        {
            get
            {
                return _DateOfLastPlay;
            }
            set
            {
                OnDateOfLastPlayChanging(value);
                ReportPropertyChanging("DateOfLastPlay");
                _DateOfLastPlay = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateOfLastPlay");
                OnDateOfLastPlayChanged();
            }
        }
        private global::System.DateTime _DateOfLastPlay;
        partial void OnDateOfLastPlayChanging(global::System.DateTime value);
        partial void OnDateOfLastPlayChanged();

        #endregion
    
        #region ナビゲーション プロパティ
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "PlayerStakesData", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("PTRDB.PlayerStakesData", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("PTRDB.PlayerStakesData", "Player").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("PTRDB.PlayerStakesData", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("PTRDB.PlayerStakesData", "Player", value);
                }
            }
        }
    
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PTRDB", "StakeStakesData", "Stake")]
        public Stake Stake
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stake>("PTRDB.StakeStakesData", "Stake").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stake>("PTRDB.StakeStakesData", "Stake").Value = value;
            }
        }
        /// <summary>
        /// 使用できるメタデータ ドキュメントはありません。
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Stake> StakeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Stake>("PTRDB.StakeStakesData", "Stake");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Stake>("PTRDB.StakeStakesData", "Stake", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
